// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jf_web.DataAccess;

namespace jf_web.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20190320211031_InitialCreate3")]
    partial class InitialCreate3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("jf_web.Domain.Member", b =>
                {
                    b.Property<string>("Cpr")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Cpr");

                    b.ToTable("Members");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Member");
                });

            modelBuilder.Entity("jf_web.Domain.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MemberCpr");

                    b.Property<int?>("PaymentMethodId");

                    b.HasKey("Id");

                    b.HasIndex("MemberCpr");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("jf_web.Domain.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("jf_web.Domain.Employee", b =>
                {
                    b.HasBaseType("jf_web.Domain.Member");

                    b.Property<string>("Address");

                    b.Property<string>("Company");

                    b.Property<string>("Email");

                    b.Property<bool>("Magazine");

                    b.Property<string>("Phone");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("jf_web.Domain.Membership", b =>
                {
                    b.HasOne("jf_web.Domain.Member", "Member")
                        .WithMany("Memberships")
                        .HasForeignKey("MemberCpr");

                    b.HasOne("jf_web.Domain.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");
                });
#pragma warning restore 612, 618
        }
    }
}
